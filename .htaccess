# Kirby .htaccess

<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /www

# Redirection de tout sous-domaine www vers le domaine principal
RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
RewriteRule ^ https://%1%{REQUEST_URI} [L,R=301]

# Redirect http to https
RewriteCond %{HTTP:X-Forwarded-Proto} !https
RewriteCond %{HTTPS} off
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301,NE,QSA]

# Redirect requests to cache folder if possible
# RewriteCond %{THE_REQUEST} \s/+cache(/\S*)?\s [NC]
# RewriteRule ^cache/(.*) index.php
# RewriteCond %{DOCUMENT_ROOT}/www/cache/%{REQUEST_URI}/index.html -f [NC]
# RewriteRule ^(.*) %{DOCUMENT_ROOT}/www/cache/%{REQUEST_URI}/index.html [L]
# RewriteCond %{DOCUMENT_ROOT}/www/cache/%{REQUEST_URI} -f [NC]
# RewriteRule ^(.*) %{DOCUMENT_ROOT}/www/cache/%{REQUEST_URI} [L]

# Redirect every requests to /www folder
RewriteCond %{REQUEST_URI} !^/www/
RewriteRule ^(.*)$ /www/$1 [L]

# Block files and folders beginning with a dot, such as .git
# except for the .well-known folder, which is used for Let's Encrypt and security.txt
RewriteRule (^|/)\.(?!well-known\/) index.php [L]

# Block some website files from being accessed directly
RewriteRule ^content/(.*) index.php [L]
RewriteRule ^site/(.*) index.php [L]
RewriteRule ^vendor/(.*) index.php [L]
RewriteRule ^storage/(.*) index.php [L]

# make site links work
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*) index.php [L]

</IfModule>

# pass the Authorization header to PHP
SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1

# compress text file responses
<IfModule mod_deflate.c>
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE text/javascript
AddOutputFilterByType DEFLATE application/json
AddOutputFilterByType DEFLATE application/javascript
AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

</IfModule>

# set security headers in all responses
<IfModule mod_headers.c>

# serve files as plain text if the actual content type is not known
# (hardens against attacks from malicious file uploads)
Header set Content-Type "text/plain" "expr=-z %{CONTENT_TYPE}"
Header set X-Content-Type-Options "nosniff"

</IfModule>